<?php

namespace App\MoonShine\Resources;

use Illuminate\Database\Eloquent\Model;

use Leeto\MoonShine\Fields\BelongsTo;
use Leeto\MoonShine\Fields\Date;
use Leeto\MoonShine\Fields\Text;
use Leeto\MoonShine\Resources\Resource;
use Leeto\MoonShine\Fields\ID;
use Leeto\MoonShine\Actions\FiltersAction;
use VI\LaravelSiteSettings\Models\Setting;

class SettingResource extends Resource
{
    public static string $model = Setting::class;

    public static string $title = 'Settings';

    public string $titleField = 'slug';

    public function fields(): array
    {
        return [
            ID::make()->sortable(),
            BelongsTo::make(
                'Group',
                'setting_group_id',
                fn($item) => $item->name_human
            )->nullable()->sortable(),
            Text::make('Slug', 'slug')->required()->sortable()->hint('a-z, 0-9, -'),
            Text::make('Hint', 'name')->nullable()->sortable()->hint('Не используется на сайте, только для удобства администрирования!'),
            Text::make('Value', 'value')->required()->sortable(),
            Date::make('Updated at', 'updated_at')->sortable()->hideOnForm(),
        ];
    }

    public function rules(Model $item): array
    {
        return [
            'setting_group_id' => 'required|exists:setting_groups,id',
            'slug'  => 'required|max:190|regex:/^([a-z0-9\-]+)$/i|unique:laravel_site_setting_groups,slug,' . $item->getKey(),
            'name'  => 'nullable|max:190',
            'value' => 'required|max:190',
        ];
    }

    public function search(): array
    {
        return ['id', 'slug', 'name', 'value'];
    }

    public function filters(): array
    {
        return [
            BelongsTo::make(
                'Group',
                'setting_group_id',
                fn($item) => $item->name_human
            )->nullable(),
        ];
    }

    public function actions(): array
    {
        return [
            FiltersAction::make(trans('moonshine::ui.filters')),
        ];
    }
}
